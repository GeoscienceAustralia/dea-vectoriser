---
name: Push

"on":
  push:
#  pull_request:
#  release:
#    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    name: Python ${{ matrix.python-version }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          activate-environment: dea-vectoriser
          mamba-version: "*"
          environment-file: environment.yaml

      - name: Build package
        # Running build this way uses a segregated environment, only installing
        # the packages specified in pyproject.toml
        run: |
          pip install build
          python -m build

      - name: Install from local dir
        # Don't install the wheel, getting code coverage from tests is
        # nigh on impossible
        run: |
          pip install -e .

      - name: Check code
        run: |
          pytest --cov dea_vectoriser --cov-report=xml tests

#      - name: Upload artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: packages
#          path: dist

      - uses: codecov/codecov-action@3.1.2
        with:
          env_vars: OS,PYTHON
          file: ./coverage.xml

#  deploy-packages:
##   deploy:
##       if: github.event_name == 'push' && github.ref == 'refs/heads/master'
#    if: startsWith(github.ref, 'refs/tags/')
##    if: github.ref == 'refs/heads/master'
#    runs-on: ubuntu-latest
#    needs: test
#    steps:
#      - name: Download a single artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: packages
#          path: dist
#
#      - name: Display directory structure of downloaded files
#        run: ls -lR
#
#      - name: Deploy packages
#        uses: jakejarvis/s3-sync-action@master
#        with:
#          args: --acl public-read --follow-symlinks
#        env:
#          AWS_S3_BUCKET: 'datacube-core-deployment'
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_REGION: 'ap-southeast-2'   # optional: defaults to us-east-1
#          SOURCE_DIR: 'dist'      # optional: defaults to entire repository
#          DEST_DIR: 'fc'
